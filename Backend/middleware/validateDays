const jwt = require('express-jwt');
const { secret } = require('config.json');
const {models} = require('./../libs/sequelize');
const { AvailableDays } = require('../db/models/availableDays.model');
const { Employee } = require('../db/models/employee.model');
const moment = require('moment-timezone');

module.exports = validateDays;

function validateDays() {
    return [
        // attach full user record to request object
        async (req, res, next) => {
  
            //verificamos que tenga registro de fecha de ingreso
            const employee=await models.Employee.findOne({where:{id:req.params.id}});
            
            if(!employee.fechaIngreso){return res.status(404).json({message: "El empleado no tiene fecha de ingreso"})}
            
            // verificamos que exista registro de dias
            const avaibleDays=await models.AvailableDays.findOne(({where:{employeeId:employee.id}}));

            if(!avaibleDays){
                //comparamos las fechas
                var fechaActual = moment().tz(process.env.TZ);
                var fechaIngreso = moment(employee.fechaIngreso);
                //a√±os de antiguedad
                let diff=fechaActual.diff(fechaIngreso, 'years') 

                //fecha limite para uso de los dias
                var fechaLimite=moment(employee.fechaIngreso).add(diff+1,'year');
                console.log(diff);    
                console.log('FechaLimite '+moment(fechaLimite).format('DD/MM/YYYY'));

                const day =await models.AvailableDays.create({employeeId:employee.id,avaibleDays:diff,fechaLimite:moment(fechaLimite).format('DD/MM/YYYY'),status:1});

                return res.status(201).json({data:day,message:"Registro exitoso"})
                // console.log(employee);
            }
            
            next();
        }
    ];
}